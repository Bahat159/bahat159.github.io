
1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 83 ec 30          	sub    $0x30,%rsp
   c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  13:	00 00 
  15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  19:	31 c0                	xor    %eax,%eax
  1b:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%rbp)
  22:	48 c7 45 d8 96 00 00 	movq   $0x96,-0x28(%rbp)
  29:	00 
  2a:	48 b8 54 68 69 73 20 	movabs $0x2073692073696854,%rax
  31:	69 73 20 
  34:	48 ba 61 20 74 65 73 	movabs $0x6d20747365742061,%rdx
  3b:	74 20 6d 
  3e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  42:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  46:	c7 45 f0 65 73 73 61 	movl   $0x61737365,-0x10(%rbp)
  4d:	66 c7 45 f4 67 65    	movw   $0x6567,-0xc(%rbp)
  53:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 5a <main+0x5a>
  5a:	e8 00 00 00 00       	callq  5f <main+0x5f>
  5f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  63:	48 89 c6             	mov    %rax,%rsi
  66:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 6d <main+0x6d>
  6d:	b8 00 00 00 00       	mov    $0x0,%eax
  72:	e8 00 00 00 00       	callq  77 <main+0x77>
  77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  7b:	48 89 c6             	mov    %rax,%rsi
  7e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 85 <main+0x85>
  85:	b8 00 00 00 00       	mov    $0x0,%eax
  8a:	e8 00 00 00 00       	callq  8f <main+0x8f>
  8f:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 96 <main+0x96>
  96:	e8 00 00 00 00       	callq  9b <main+0x9b>
  9b:	b8 00 00 00 00       	mov    $0x0,%eax
  a0:	e8 00 00 00 00       	callq  a5 <main+0xa5>
  a5:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # ac <main+0xac>
  ac:	e8 00 00 00 00       	callq  b1 <main+0xb1>
  b1:	bf 00 00 00 00       	mov    $0x0,%edi
  b6:	e8 00 00 00 00       	callq  bb <calculate_fahrenhite>

00000000000000bb <calculate_fahrenhite>:
  bb:	f3 0f 1e fa          	endbr64 
  bf:	55                   	push   %rbp
  c0:	48 89 e5             	mov    %rsp,%rbp
  c3:	48 83 ec 20          	sub    $0x20,%rsp
  c7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  ce:	c7 45 f4 2c 01 00 00 	movl   $0x12c,-0xc(%rbp)
  d5:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%rbp)
  dc:	8b 45 f0             	mov    -0x10(%rbp),%eax
  df:	89 45 ec             	mov    %eax,-0x14(%rbp)
  e2:	eb 2f                	jmp    113 <calculate_fahrenhite+0x58>
  e4:	8b 45 ec             	mov    -0x14(%rbp),%eax
  e7:	8d 50 e0             	lea    -0x20(%rax),%edx
  ea:	89 d0                	mov    %edx,%eax
  ec:	c1 e0 02             	shl    $0x2,%eax
  ef:	01 d0                	add    %edx,%eax
  f1:	89 45 fc             	mov    %eax,-0x4(%rbp)
  f4:	8b 55 fc             	mov    -0x4(%rbp),%edx
  f7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  fa:	89 c6                	mov    %eax,%esi
  fc:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 103 <calculate_fahrenhite+0x48>
 103:	b8 00 00 00 00       	mov    $0x0,%eax
 108:	e8 00 00 00 00       	callq  10d <calculate_fahrenhite+0x52>
 10d:	8b 45 f8             	mov    -0x8(%rbp),%eax
 110:	01 45 ec             	add    %eax,-0x14(%rbp)
 113:	8b 45 ec             	mov    -0x14(%rbp),%eax
 116:	3b 45 f4             	cmp    -0xc(%rbp),%eax
 119:	7e c9                	jle    e4 <calculate_fahrenhite+0x29>
 11b:	90                   	nop
 11c:	c9                   	leaveq 
 11d:	c3                   	retq   

000000000000011e <calculate_fahr_with_for_loop>:
 11e:	f3 0f 1e fa          	endbr64 
 122:	55                   	push   %rbp
 123:	48 89 e5             	mov    %rsp,%rbp
 126:	48 83 ec 10          	sub    $0x10,%rsp
 12a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 131:	eb 30                	jmp    163 <calculate_fahr_with_for_loop+0x45>
 133:	8b 45 fc             	mov    -0x4(%rbp),%eax
 136:	83 e8 20             	sub    $0x20,%eax
 139:	f2 0f 2a c8          	cvtsi2sd %eax,%xmm1
 13d:	f2 0f 10 05 00 00 00 	movsd  0x0(%rip),%xmm0        # 145 <calculate_fahr_with_for_loop+0x27>
 144:	00 
 145:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
 149:	8b 45 fc             	mov    -0x4(%rbp),%eax
 14c:	89 c6                	mov    %eax,%esi
 14e:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 155 <calculate_fahr_with_for_loop+0x37>
 155:	b8 01 00 00 00       	mov    $0x1,%eax
 15a:	e8 00 00 00 00       	callq  15f <calculate_fahr_with_for_loop+0x41>
 15f:	83 45 fc 14          	addl   $0x14,-0x4(%rbp)
 163:	81 7d fc 2c 01 00 00 	cmpl   $0x12c,-0x4(%rbp)
 16a:	7e c7                	jle    133 <calculate_fahr_with_for_loop+0x15>
 16c:	90                   	nop
 16d:	c9                   	leaveq 
 16e:	c3                   	retq   

000000000000016f <power_function_call_by_value>:
 16f:	f3 0f 1e fa          	endbr64 
 173:	55                   	push   %rbp
 174:	48 89 e5             	mov    %rsp,%rbp
 177:	89 7d ec             	mov    %edi,-0x14(%rbp)
 17a:	89 75 e8             	mov    %esi,-0x18(%rbp)
 17d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
 184:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
 188:	7e 0f                	jle    199 <power_function_call_by_value+0x2a>
 18a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 18d:	0f af 45 ec          	imul   -0x14(%rbp),%eax
 191:	89 45 fc             	mov    %eax,-0x4(%rbp)
 194:	8b 45 fc             	mov    -0x4(%rbp),%eax
 197:	eb 00                	jmp    199 <power_function_call_by_value+0x2a>
 199:	5d                   	pop    %rbp
 19a:	c3                   	retq   

000000000000019b <getline_input>:
 19b:	f3 0f 1e fa          	endbr64 
 19f:	55                   	push   %rbp
 1a0:	48 89 e5             	mov    %rsp,%rbp
 1a3:	48 83 ec 20          	sub    $0x20,%rsp
 1a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 1ab:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 1ae:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 1b5:	eb 16                	jmp    1cd <getline_input+0x32>
 1b7:	8b 45 fc             	mov    -0x4(%rbp),%eax
 1ba:	48 63 d0             	movslq %eax,%rdx
 1bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1c1:	48 01 d0             	add    %rdx,%rax
 1c4:	8b 55 f8             	mov    -0x8(%rbp),%edx
 1c7:	88 10                	mov    %dl,(%rax)
 1c9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 1cd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 1d0:	83 e8 01             	sub    $0x1,%eax
 1d3:	39 45 fc             	cmp    %eax,-0x4(%rbp)
 1d6:	7d 14                	jge    1ec <getline_input+0x51>
 1d8:	e8 00 00 00 00       	callq  1dd <getline_input+0x42>
 1dd:	89 45 f8             	mov    %eax,-0x8(%rbp)
 1e0:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
 1e4:	74 06                	je     1ec <getline_input+0x51>
 1e6:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)
 1ea:	75 cb                	jne    1b7 <getline_input+0x1c>
 1ec:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)
 1f0:	75 16                	jne    208 <getline_input+0x6d>
 1f2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 1f5:	48 63 d0             	movslq %eax,%rdx
 1f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 1fc:	48 01 d0             	add    %rdx,%rax
 1ff:	8b 55 f8             	mov    -0x8(%rbp),%edx
 202:	88 10                	mov    %dl,(%rax)
 204:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 208:	8b 45 fc             	mov    -0x4(%rbp),%eax
 20b:	48 63 d0             	movslq %eax,%rdx
 20e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 212:	48 01 d0             	add    %rdx,%rax
 215:	c6 00 00             	movb   $0x0,(%rax)
 218:	8b 45 fc             	mov    -0x4(%rbp),%eax
 21b:	c9                   	leaveq 
 21c:	c3                   	retq   

000000000000021d <copy_to_from>:
 21d:	f3 0f 1e fa          	endbr64 
 221:	55                   	push   %rbp
 222:	48 89 e5             	mov    %rsp,%rbp
 225:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 229:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 22d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 234:	eb 04                	jmp    23a <copy_to_from+0x1d>
 236:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 23a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 23d:	48 63 d0             	movslq %eax,%rdx
 240:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 244:	48 01 c2             	add    %rax,%rdx
 247:	8b 45 fc             	mov    -0x4(%rbp),%eax
 24a:	48 63 c8             	movslq %eax,%rcx
 24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 251:	48 01 c8             	add    %rcx,%rax
 254:	0f b6 12             	movzbl (%rdx),%edx
 257:	88 10                	mov    %dl,(%rax)
 259:	0f b6 00             	movzbl (%rax),%eax
 25c:	84 c0                	test   %al,%al
 25e:	75 d6                	jne    236 <copy_to_from+0x19>
 260:	90                   	nop
 261:	90                   	nop
 262:	5d                   	pop    %rbp
 263:	c3                   	retq   

0000000000000264 <copy_and_getline_main>:
 264:	f3 0f 1e fa          	endbr64 
 268:	55                   	push   %rbp
 269:	48 89 e5             	mov    %rsp,%rbp
 26c:	48 81 ec f0 07 00 00 	sub    $0x7f0,%rsp
 273:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 27a:	00 00 
 27c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 280:	31 c0                	xor    %eax,%eax
 282:	c7 85 18 f8 ff ff 00 	movl   $0x0,-0x7e8(%rbp)
 289:	00 00 00 
 28c:	eb 33                	jmp    2c1 <copy_and_getline_main+0x5d>
 28e:	8b 85 1c f8 ff ff    	mov    -0x7e4(%rbp),%eax
 294:	3b 85 18 f8 ff ff    	cmp    -0x7e8(%rbp),%eax
 29a:	7e 25                	jle    2c1 <copy_and_getline_main+0x5d>
 29c:	8b 85 1c f8 ff ff    	mov    -0x7e4(%rbp),%eax
 2a2:	89 85 18 f8 ff ff    	mov    %eax,-0x7e8(%rbp)
 2a8:	48 8d 95 20 f8 ff ff 	lea    -0x7e0(%rbp),%rdx
 2af:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
 2b6:	48 89 d6             	mov    %rdx,%rsi
 2b9:	48 89 c7             	mov    %rax,%rdi
 2bc:	e8 00 00 00 00       	callq  2c1 <copy_and_getline_main+0x5d>
 2c1:	48 8d 85 20 f8 ff ff 	lea    -0x7e0(%rbp),%rax
 2c8:	be e8 03 00 00       	mov    $0x3e8,%esi
 2cd:	48 89 c7             	mov    %rax,%rdi
 2d0:	e8 00 00 00 00       	callq  2d5 <copy_and_getline_main+0x71>
 2d5:	89 85 1c f8 ff ff    	mov    %eax,-0x7e4(%rbp)
 2db:	83 bd 1c f8 ff ff 00 	cmpl   $0x0,-0x7e4(%rbp)
 2e2:	7f aa                	jg     28e <copy_and_getline_main+0x2a>
 2e4:	83 bd 18 f8 ff ff 00 	cmpl   $0x0,-0x7e8(%rbp)
 2eb:	7e 1b                	jle    308 <copy_and_getline_main+0xa4>
 2ed:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
 2f4:	48 89 c6             	mov    %rax,%rsi
 2f7:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 2fe <copy_and_getline_main+0x9a>
 2fe:	b8 00 00 00 00       	mov    $0x0,%eax
 303:	e8 00 00 00 00       	callq  308 <copy_and_getline_main+0xa4>
 308:	b8 00 00 00 00       	mov    $0x0,%eax
 30d:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 311:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 318:	00 00 
 31a:	74 05                	je     321 <copy_and_getline_main+0xbd>
 31c:	e8 00 00 00 00       	callq  321 <copy_and_getline_main+0xbd>
 321:	c9                   	leaveq 
 322:	c3                   	retq   

0000000000000323 <string_length>:
 323:	f3 0f 1e fa          	endbr64 
 327:	55                   	push   %rbp
 328:	48 89 e5             	mov    %rsp,%rbp
 32b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 32f:	eb 04                	jmp    335 <string_length+0x12>
 331:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 335:	8b 45 fc             	mov    -0x4(%rbp),%eax
 338:	48 63 d0             	movslq %eax,%rdx
 33b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33f:	48 01 d0             	add    %rdx,%rax
 342:	0f b6 00             	movzbl (%rax),%eax
 345:	84 c0                	test   %al,%al
 347:	75 e8                	jne    331 <string_length+0xe>
 349:	8b 45 fc             	mov    -0x4(%rbp),%eax
 34c:	5d                   	pop    %rbp
 34d:	c3                   	retq   

000000000000034e <convert_to_lower_char>:
 34e:	f3 0f 1e fa          	endbr64 
 352:	55                   	push   %rbp
 353:	48 89 e5             	mov    %rsp,%rbp
 356:	89 7d fc             	mov    %edi,-0x4(%rbp)
 359:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
 35d:	7e 0e                	jle    36d <convert_to_lower_char+0x1f>
 35f:	83 7d fc 5a          	cmpl   $0x5a,-0x4(%rbp)
 363:	7f 08                	jg     36d <convert_to_lower_char+0x1f>
 365:	8b 45 fc             	mov    -0x4(%rbp),%eax
 368:	83 c0 20             	add    $0x20,%eax
 36b:	eb 03                	jmp    370 <convert_to_lower_char+0x22>
 36d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 370:	5d                   	pop    %rbp
 371:	c3                   	retq   

0000000000000372 <generate_random>:
 372:	f3 0f 1e fa          	endbr64 
 376:	55                   	push   %rbp
 377:	48 89 e5             	mov    %rsp,%rbp
 37a:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 381 <generate_random+0xf>
 381:	48 69 c0 6d 4e c6 41 	imul   $0x41c64e6d,%rax,%rax
 388:	48 05 39 30 00 00    	add    $0x3039,%rax
 38e:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 395 <generate_random+0x23>
 395:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 39c <generate_random+0x2a>
 39c:	48 c1 e8 10          	shr    $0x10,%rax
 3a0:	25 ff 7f 00 00       	and    $0x7fff,%eax
 3a5:	5d                   	pop    %rbp
 3a6:	c3                   	retq   

00000000000003a7 <s_rand>:
 3a7:	f3 0f 1e fa          	endbr64 
 3ab:	55                   	push   %rbp
 3ac:	48 89 e5             	mov    %rsp,%rbp
 3af:	89 7d fc             	mov    %edi,-0x4(%rbp)
 3b2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3b5:	48 89 05 00 00 00 00 	mov    %rax,0x0(%rip)        # 3bc <s_rand+0x15>
 3bc:	90                   	nop
 3bd:	5d                   	pop    %rbp
 3be:	c3                   	retq   

00000000000003bf <binary_search>:
 3bf:	f3 0f 1e fa          	endbr64 
 3c3:	55                   	push   %rbp
 3c4:	48 89 e5             	mov    %rsp,%rbp
 3c7:	89 7d ec             	mov    %edi,-0x14(%rbp)
 3ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3ce:	89 55 e8             	mov    %edx,-0x18(%rbp)
 3d1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 3d8:	8b 45 e8             	mov    -0x18(%rbp),%eax
 3db:	83 e8 01             	sub    $0x1,%eax
 3de:	89 45 f8             	mov    %eax,-0x8(%rbp)
 3e1:	eb 65                	jmp    448 <binary_search+0x89>
 3e3:	8b 55 f4             	mov    -0xc(%rbp),%edx
 3e6:	8b 45 f8             	mov    -0x8(%rbp),%eax
 3e9:	01 d0                	add    %edx,%eax
 3eb:	89 c2                	mov    %eax,%edx
 3ed:	c1 ea 1f             	shr    $0x1f,%edx
 3f0:	01 d0                	add    %edx,%eax
 3f2:	d1 f8                	sar    %eax
 3f4:	89 45 fc             	mov    %eax,-0x4(%rbp)
 3f7:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3fa:	48 98                	cltq   
 3fc:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 403:	00 
 404:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 408:	48 01 d0             	add    %rdx,%rax
 40b:	8b 00                	mov    (%rax),%eax
 40d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 410:	7d 0b                	jge    41d <binary_search+0x5e>
 412:	8b 45 fc             	mov    -0x4(%rbp),%eax
 415:	83 c0 01             	add    $0x1,%eax
 418:	89 45 f8             	mov    %eax,-0x8(%rbp)
 41b:	eb 2b                	jmp    448 <binary_search+0x89>
 41d:	8b 45 fc             	mov    -0x4(%rbp),%eax
 420:	48 98                	cltq   
 422:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 429:	00 
 42a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 42e:	48 01 d0             	add    %rdx,%rax
 431:	8b 00                	mov    (%rax),%eax
 433:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 436:	7e 0b                	jle    443 <binary_search+0x84>
 438:	8b 45 fc             	mov    -0x4(%rbp),%eax
 43b:	83 c0 01             	add    $0x1,%eax
 43e:	89 45 f4             	mov    %eax,-0xc(%rbp)
 441:	eb 05                	jmp    448 <binary_search+0x89>
 443:	8b 45 fc             	mov    -0x4(%rbp),%eax
 446:	eb 0d                	jmp    455 <binary_search+0x96>
 448:	8b 45 f4             	mov    -0xc(%rbp),%eax
 44b:	3b 45 f8             	cmp    -0x8(%rbp),%eax
 44e:	7e 93                	jle    3e3 <binary_search+0x24>
 450:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 455:	5d                   	pop    %rbp
 456:	c3                   	retq   

0000000000000457 <alphabet_to_integer>:
 457:	f3 0f 1e fa          	endbr64 
 45b:	55                   	push   %rbp
 45c:	48 89 e5             	mov    %rsp,%rbp
 45f:	48 83 ec 20          	sub    $0x20,%rsp
 463:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 467:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 46e:	eb 04                	jmp    474 <alphabet_to_integer+0x1d>
 470:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 474:	8b 45 f4             	mov    -0xc(%rbp),%eax
 477:	48 63 d0             	movslq %eax,%rdx
 47a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 47e:	48 01 d0             	add    %rdx,%rax
 481:	0f b6 00             	movzbl (%rax),%eax
 484:	0f be c0             	movsbl %al,%eax
 487:	89 c7                	mov    %eax,%edi
 489:	e8 00 00 00 00       	callq  48e <alphabet_to_integer+0x37>
 48e:	85 c0                	test   %eax,%eax
 490:	75 de                	jne    470 <alphabet_to_integer+0x19>
 492:	8b 45 f4             	mov    -0xc(%rbp),%eax
 495:	48 63 d0             	movslq %eax,%rdx
 498:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 49c:	48 01 d0             	add    %rdx,%rax
 49f:	0f b6 00             	movzbl (%rax),%eax
 4a2:	3c 2d                	cmp    $0x2d,%al
 4a4:	75 07                	jne    4ad <alphabet_to_integer+0x56>
 4a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 4ab:	eb 05                	jmp    4b2 <alphabet_to_integer+0x5b>
 4ad:	b8 01 00 00 00       	mov    $0x1,%eax
 4b2:	89 45 fc             	mov    %eax,-0x4(%rbp)
 4b5:	8b 45 f4             	mov    -0xc(%rbp),%eax
 4b8:	48 63 d0             	movslq %eax,%rdx
 4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 4bf:	48 01 d0             	add    %rdx,%rax
 4c2:	0f b6 00             	movzbl (%rax),%eax
 4c5:	3c 2b                	cmp    $0x2b,%al
 4c7:	74 14                	je     4dd <alphabet_to_integer+0x86>
 4c9:	8b 45 f4             	mov    -0xc(%rbp),%eax
 4cc:	48 63 d0             	movslq %eax,%rdx
 4cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 4d3:	48 01 d0             	add    %rdx,%rax
 4d6:	0f b6 00             	movzbl (%rax),%eax
 4d9:	3c 2d                	cmp    $0x2d,%al
 4db:	75 04                	jne    4e1 <alphabet_to_integer+0x8a>
 4dd:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 4e1:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
 4e8:	eb 2d                	jmp    517 <alphabet_to_integer+0xc0>
 4ea:	8b 55 f8             	mov    -0x8(%rbp),%edx
 4ed:	89 d0                	mov    %edx,%eax
 4ef:	c1 e0 02             	shl    $0x2,%eax
 4f2:	01 d0                	add    %edx,%eax
 4f4:	01 c0                	add    %eax,%eax
 4f6:	89 c1                	mov    %eax,%ecx
 4f8:	8b 45 f4             	mov    -0xc(%rbp),%eax
 4fb:	48 63 d0             	movslq %eax,%rdx
 4fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 502:	48 01 d0             	add    %rdx,%rax
 505:	0f b6 00             	movzbl (%rax),%eax
 508:	0f be c0             	movsbl %al,%eax
 50b:	83 e8 30             	sub    $0x30,%eax
 50e:	01 c8                	add    %ecx,%eax
 510:	89 45 f8             	mov    %eax,-0x8(%rbp)
 513:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
 517:	8b 45 f4             	mov    -0xc(%rbp),%eax
 51a:	48 63 d0             	movslq %eax,%rdx
 51d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 521:	48 01 d0             	add    %rdx,%rax
 524:	0f b6 00             	movzbl (%rax),%eax
 527:	0f be c0             	movsbl %al,%eax
 52a:	83 e8 30             	sub    $0x30,%eax
 52d:	83 f8 09             	cmp    $0x9,%eax
 530:	76 b8                	jbe    4ea <alphabet_to_integer+0x93>
 532:	8b 45 fc             	mov    -0x4(%rbp),%eax
 535:	0f af 45 f8          	imul   -0x8(%rbp),%eax
 539:	c9                   	leaveq 
 53a:	c3                   	retq   
